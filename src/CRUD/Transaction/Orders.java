/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CRUD.Transaction;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Orders extends javax.swing.JFrame {

    /**
     * Creates new form Orders
     */
    public Connection conn1;
    public Statement st;
    public ResultSet rs;
    DefaultTableModel model = new DefaultTableModel();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    DecimalFormat numberFormat = new DecimalFormat("#.00");
    AddOrders ad = new AddOrders();

    public Orders() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filter = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        total = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        filter.setText("Filter");
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        total.setText("0000000");

        jLabel1.setText("Total :");

        jLabel2.setText("Tanggal Awal");

        jLabel3.setText("Tanggal Akhir");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        jDateChooser2.setDateFormatString("yyyy-MM-dd");

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(filter)))
                        .addGap(0, 431, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(tambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambah)
                    .addComponent(cancel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filter)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            conn1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "market", "123456789");
            if (conn1 != null) {
                double i = 0;
                st = conn1.createStatement();
                rs = st.executeQuery("select o.*, sum(oi.QUANTITY*oi.UNIT_PRICE) AS SUBTOTAL from ORDERS o join ORDER_ITEMS oi on oi.ORDER_ID=o.ORDER_ID where o.order_date between to_date('" + sdf.format(jDateChooser1.getDate()) + "','YYYY-MM-DD') and to_date('" + sdf.format(jDateChooser2.getDate()) + "','YYYY-MM-DD') GROUP BY o.ORDER_ID ,o.CUSTOMER_ID ,o.STATUS ,o.SALESMAN_ID ,o.ORDER_DATE order by o.order_id desc ");
                model.setRowCount(0);
                while (rs.next()) {

                    String id = rs.getString("ORDER_ID");
                    String date = rs.getString("ORDER_DATE");
                    String custId = rs.getString("CUSTOMER_ID");
                    String status = rs.getString("STATUS");
                    String salesman_id = rs.getString("SALESMAN_ID");
                    double subtotal = rs.getDouble("SUBTOTAL");
                    i = subtotal + i;

                    model.addRow(new Object[]{id, date, custId, status, salesman_id, subtotal});

                }
//                jTable1.setModel(model);

                conn1.close();
                this.total.disable();
                this.total.setText(String.valueOf(numberFormat.format(i)));
            } else {

            }
        } catch (ClassNotFoundException ex) {

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_filterActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            conn1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "market", "123456789");
            if (conn1 != null) {
                double total1 = 0;
                st = conn1.createStatement();
                rs = st.executeQuery("select o.*, sum(oi.QUANTITY*oi.UNIT_PRICE) AS SUBTOTAL from ORDERS o join ORDER_ITEMS oi on oi.ORDER_ID=o.ORDER_ID GROUP BY o.ORDER_ID ,o.CUSTOMER_ID ,o.STATUS ,o.SALESMAN_ID ,o.ORDER_DATE order by o.order_id desc ");
                model.addColumn("ORDER ID");
                model.addColumn("DATE");
                model.addColumn("CUSTOMER");
                model.addColumn("STATUS");
                model.addColumn("SALESMAN");
                model.addColumn("SUBTOTAL");
                while (rs.next()) {

                    String id = rs.getString("ORDER_ID");
                    String date = rs.getString("ORDER_DATE");
                    String custId = rs.getString("CUSTOMER_ID");
                    String status = rs.getString("STATUS");
                    String salesman_id = rs.getString("SALESMAN_ID");
                    double subtotal = rs.getDouble("SUBTOTAL");
                    total1 = subtotal + total1;

                    model.addRow(new Object[]{id, date, custId, status, salesman_id, subtotal});
                }
                jTable1.setModel(model);

                this.total.disable();
                this.total.setText(String.valueOf(numberFormat.format(total1)));

                // set data di add orders
                rs = st.executeQuery("select * from CUSTOMERS order by CUSTOMER_ID asc");
                ad.jComboBoxCustomer.removeAllItems();
                ad.jComboBoxCustomer.addItem("Select Customer");
                if (ad.listCust.isEmpty() == false) {
                    ad.listCust.clear();
                }
                while (rs.next()) {
                    ad.listCust.add(rs.getInt("CUSTOMER_ID"));
                    ad.jComboBoxCustomer.addItem(rs.getString("NAME"));
                }

                rs = st.executeQuery("select * from EMPLOYEES where JOB_TITLE like '%Sales%' order by EMPLOYEE_ID asc");
                ad.jComboBoxSales.removeAllItems();
                ad.jComboBoxSales.addItem("Select Salesman");
                if (ad.listSales.isEmpty() == false) {
                    ad.listSales.clear();
                }
                while (rs.next()) {
                    ad.listSales.add(rs.getInt("EMPLOYEE_ID"));
                    ad.jComboBoxSales.addItem(rs.getString("FIRST_NAME") + " " + rs.getString("LAST_NAME"));
                }
            } else {

            }
        } catch (ClassNotFoundException ex) {

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_formComponentShown

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
        AddOrders k = new AddOrders();

        try {
            rs = st.executeQuery("select order_id from orders where order_id = (select max(order_id) from orders)");
            while (rs.next()) {
                k.orderid.setText(String.valueOf(rs.getInt("order_id") + 1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Orders.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.setVisible(false);
        k.setAlwaysOnTop(true);
        k.setBounds(0 + 200, 0 + 200, 851, 700);
        k.toFront();
        k.requestFocus();
        k.setVisible(true);
        k.toFront();
        k.requestFocus();
    }//GEN-LAST:event_tambahActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            conn1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "market", "123456789");
            st = conn1.createStatement();

            int baris = jTable1.getSelectedRow();
            this.setVisible(false);
            ad.setVisible(true);
            ad.setAlwaysOnTop(true);
            ad.setBounds(0 + 200, 0 + 200, 400, 600);
            ad.toFront();
            ad.requestFocus();
            if (baris != -1) {
//                if (ad.listCust.)

                // order id
                ad.orderid.setText(jTable1.getValueAt(baris, 0).toString());
                // tanggal
                ad.jDateChooserTanggal.setDate(sdf.parse(jTable1.getValueAt(baris, 1).toString()));
                // customer
                int index1 = ad.listCust.indexOf(Integer.valueOf(jTable1.getValueAt(baris, 2).toString())) + 1;
                ad.jComboBoxCustomer.setSelectedIndex(index1);
                // status
                ad.jComboBoxStatus.setSelectedItem(jTable1.getValueAt(baris, 3));
                // salesman
                int index2 = ad.listSales.indexOf(Integer.valueOf(jTable1.getValueAt(baris, 4).toString())) + 1;
                ad.jComboBoxSales.setSelectedIndex(index2);
            }
        } catch (ParseException ex) {
            Logger.getLogger(Orders.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Orders.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orders.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton filter;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
